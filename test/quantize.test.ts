/* tslint:disable: no-shadowed-variable */
import { assert } from '@onesy/test';

import { evaluate } from '../utils/js/test/utils';

import * as OnesyUtils from '../src';

group('@onesy/utils/quantize', () => {

  to('quantize', async () => {
    // Browser
    const valueBrowsers = await evaluate(async (window: any) => {
      return window.OnesyUtils.quantize([[115, 158, 195], [108, 151, 188], [92, 138, 177], [83, 132, 172], [81, 129, 169], [74, 125, 165], [63, 116, 160], [58, 111, 158], [53, 107, 154], [46, 103, 153], [42, 98, 148], [38, 96, 145], [31, 95, 141], [32, 93, 140], [165, 198, 225], [156, 192, 219], [152, 187, 218], [149, 187, 215], [143, 183, 212], [136, 177, 206], [126, 172, 204], [115, 165, 201], [102, 153, 191], [88, 142, 185], [78, 131, 177], [68, 120, 170], [50, 112, 161], [53, 110, 159], [194, 220, 235], [190, 216, 231], [191, 216, 230], [190, 215, 230], [192, 216, 231], [192, 214, 224], [221, 222, 229], [153, 185, 212], [153, 189, 213], [140, 178, 209], [119, 167, 203], [103, 155, 197], [90, 144, 188], [85, 139, 187], [207, 221, 223], [212, 221, 223], [211, 221, 225], [209, 221, 226], [207, 219, 225], [212, 225, 226], [208, 199, 210], [192, 188, 203], [166, 195, 217], [166, 196, 218], [150, 188, 216], [133, 177, 212], [123, 170, 207], [121, 167, 208], [242, 238, 217], [236, 233, 214], [234, 230, 216], [227, 226, 215], [212, 209, 213], [158, 140, 159], [175, 169, 203], [194, 188, 216], [225, 203, 210], [153, 174, 205], [170, 196, 215], [157, 187, 214], [150, 183, 213], [144, 178, 211], [190, 196, 210], [197, 202, 210], [199, 200, 196], [186, 183, 181], [190, 181, 207], [250, 234, 213], [222, 201, 202], [138, 134, 177], [108, 111, 173], [183, 176, 189], [161, 179, 207], [133, 170, 216], [114, 153, 203], [199, 207, 224], [91, 86, 89], [85, 95, 153], [84, 106, 175], [117, 123, 180], [98, 112, 175], [150, 147, 194], [126, 132, 184], [94, 100, 165], [98, 104, 168], [93, 96, 168], [94, 110, 174], [159, 174, 202], [129, 141, 193], [138, 164, 218], [66, 82, 140], [16, 23, 53], [37, 49, 110], [40, 54, 123], [86, 91, 139], [164, 175, 222], [89, 110, 165], [80, 96, 160], [52, 73, 135], [119, 134, 196], [113, 124, 189], [134, 170, 217], [41, 59, 88], [48, 79, 141], [32, 48, 115], [48, 68, 132], [34, 42, 107], [42, 68, 136], [42, 52, 113], [42, 66, 134], [74, 95, 162], [52, 77, 133], [42, 49, 96], [25, 33, 62], [62, 75, 121], [11, 18, 43], [25, 29, 70], [31, 35, 88], [7, 12, 24], [8, 15, 30], [8, 10, 17], [6, 13, 23], [11, 18, 35], [19, 27, 56], [17, 26, 42], [29, 34, 50], [6, 11, 16], [8, 13, 23], [16, 17, 39], [19, 18, 45], [12, 14, 31], [15, 15, 39]]);
    });

    const valueNode = OnesyUtils.quantize([[115, 158, 195], [108, 151, 188], [92, 138, 177], [83, 132, 172], [81, 129, 169], [74, 125, 165], [63, 116, 160], [58, 111, 158], [53, 107, 154], [46, 103, 153], [42, 98, 148], [38, 96, 145], [31, 95, 141], [32, 93, 140], [165, 198, 225], [156, 192, 219], [152, 187, 218], [149, 187, 215], [143, 183, 212], [136, 177, 206], [126, 172, 204], [115, 165, 201], [102, 153, 191], [88, 142, 185], [78, 131, 177], [68, 120, 170], [50, 112, 161], [53, 110, 159], [194, 220, 235], [190, 216, 231], [191, 216, 230], [190, 215, 230], [192, 216, 231], [192, 214, 224], [221, 222, 229], [153, 185, 212], [153, 189, 213], [140, 178, 209], [119, 167, 203], [103, 155, 197], [90, 144, 188], [85, 139, 187], [207, 221, 223], [212, 221, 223], [211, 221, 225], [209, 221, 226], [207, 219, 225], [212, 225, 226], [208, 199, 210], [192, 188, 203], [166, 195, 217], [166, 196, 218], [150, 188, 216], [133, 177, 212], [123, 170, 207], [121, 167, 208], [242, 238, 217], [236, 233, 214], [234, 230, 216], [227, 226, 215], [212, 209, 213], [158, 140, 159], [175, 169, 203], [194, 188, 216], [225, 203, 210], [153, 174, 205], [170, 196, 215], [157, 187, 214], [150, 183, 213], [144, 178, 211], [190, 196, 210], [197, 202, 210], [199, 200, 196], [186, 183, 181], [190, 181, 207], [250, 234, 213], [222, 201, 202], [138, 134, 177], [108, 111, 173], [183, 176, 189], [161, 179, 207], [133, 170, 216], [114, 153, 203], [199, 207, 224], [91, 86, 89], [85, 95, 153], [84, 106, 175], [117, 123, 180], [98, 112, 175], [150, 147, 194], [126, 132, 184], [94, 100, 165], [98, 104, 168], [93, 96, 168], [94, 110, 174], [159, 174, 202], [129, 141, 193], [138, 164, 218], [66, 82, 140], [16, 23, 53], [37, 49, 110], [40, 54, 123], [86, 91, 139], [164, 175, 222], [89, 110, 165], [80, 96, 160], [52, 73, 135], [119, 134, 196], [113, 124, 189], [134, 170, 217], [41, 59, 88], [48, 79, 141], [32, 48, 115], [48, 68, 132], [34, 42, 107], [42, 68, 136], [42, 52, 113], [42, 66, 134], [74, 95, 162], [52, 77, 133], [42, 49, 96], [25, 33, 62], [62, 75, 121], [11, 18, 43], [25, 29, 70], [31, 35, 88], [7, 12, 24], [8, 15, 30], [8, 10, 17], [6, 13, 23], [11, 18, 35], [19, 27, 56], [17, 26, 42], [29, 34, 50], [6, 11, 16], [8, 13, 23], [16, 17, 39], [19, 18, 45], [12, 14, 31], [15, 15, 39]]);

    const values = [valueNode, ...valueBrowsers];

    values.forEach(value => assert(value).eql([
      [141, 169, 205],
      [204, 209, 216],
      [30, 41, 77],
      [78, 116, 168]
    ]));
  });

  to('amount', async () => {
    // Browser
    const valueBrowsers = await evaluate(async (window: any) => {
      return window.OnesyUtils.quantize([[115, 158, 195], [108, 151, 188], [92, 138, 177], [83, 132, 172], [81, 129, 169], [74, 125, 165], [63, 116, 160], [58, 111, 158], [53, 107, 154], [46, 103, 153], [42, 98, 148], [38, 96, 145], [31, 95, 141], [32, 93, 140], [165, 198, 225], [156, 192, 219], [152, 187, 218], [149, 187, 215], [143, 183, 212], [136, 177, 206], [126, 172, 204], [115, 165, 201], [102, 153, 191], [88, 142, 185], [78, 131, 177], [68, 120, 170], [50, 112, 161], [53, 110, 159], [194, 220, 235], [190, 216, 231], [191, 216, 230], [190, 215, 230], [192, 216, 231], [192, 214, 224], [221, 222, 229], [153, 185, 212], [153, 189, 213], [140, 178, 209], [119, 167, 203], [103, 155, 197], [90, 144, 188], [85, 139, 187], [207, 221, 223], [212, 221, 223], [211, 221, 225], [209, 221, 226], [207, 219, 225], [212, 225, 226], [208, 199, 210], [192, 188, 203], [166, 195, 217], [166, 196, 218], [150, 188, 216], [133, 177, 212], [123, 170, 207], [121, 167, 208], [242, 238, 217], [236, 233, 214], [234, 230, 216], [227, 226, 215], [212, 209, 213], [158, 140, 159], [175, 169, 203], [194, 188, 216], [225, 203, 210], [153, 174, 205], [170, 196, 215], [157, 187, 214], [150, 183, 213], [144, 178, 211], [190, 196, 210], [197, 202, 210], [199, 200, 196], [186, 183, 181], [190, 181, 207], [250, 234, 213], [222, 201, 202], [138, 134, 177], [108, 111, 173], [183, 176, 189], [161, 179, 207], [133, 170, 216], [114, 153, 203], [199, 207, 224], [91, 86, 89], [85, 95, 153], [84, 106, 175], [117, 123, 180], [98, 112, 175], [150, 147, 194], [126, 132, 184], [94, 100, 165], [98, 104, 168], [93, 96, 168], [94, 110, 174], [159, 174, 202], [129, 141, 193], [138, 164, 218], [66, 82, 140], [16, 23, 53], [37, 49, 110], [40, 54, 123], [86, 91, 139], [164, 175, 222], [89, 110, 165], [80, 96, 160], [52, 73, 135], [119, 134, 196], [113, 124, 189], [134, 170, 217], [41, 59, 88], [48, 79, 141], [32, 48, 115], [48, 68, 132], [34, 42, 107], [42, 68, 136], [42, 52, 113], [42, 66, 134], [74, 95, 162], [52, 77, 133], [42, 49, 96], [25, 33, 62], [62, 75, 121], [11, 18, 43], [25, 29, 70], [31, 35, 88], [7, 12, 24], [8, 15, 30], [8, 10, 17], [6, 13, 23], [11, 18, 35], [19, 27, 56], [17, 26, 42], [29, 34, 50], [6, 11, 16], [8, 13, 23], [16, 17, 39], [19, 18, 45], [12, 14, 31], [15, 15, 39]], 14);
    });

    const valueNode = OnesyUtils.quantize([[115, 158, 195], [108, 151, 188], [92, 138, 177], [83, 132, 172], [81, 129, 169], [74, 125, 165], [63, 116, 160], [58, 111, 158], [53, 107, 154], [46, 103, 153], [42, 98, 148], [38, 96, 145], [31, 95, 141], [32, 93, 140], [165, 198, 225], [156, 192, 219], [152, 187, 218], [149, 187, 215], [143, 183, 212], [136, 177, 206], [126, 172, 204], [115, 165, 201], [102, 153, 191], [88, 142, 185], [78, 131, 177], [68, 120, 170], [50, 112, 161], [53, 110, 159], [194, 220, 235], [190, 216, 231], [191, 216, 230], [190, 215, 230], [192, 216, 231], [192, 214, 224], [221, 222, 229], [153, 185, 212], [153, 189, 213], [140, 178, 209], [119, 167, 203], [103, 155, 197], [90, 144, 188], [85, 139, 187], [207, 221, 223], [212, 221, 223], [211, 221, 225], [209, 221, 226], [207, 219, 225], [212, 225, 226], [208, 199, 210], [192, 188, 203], [166, 195, 217], [166, 196, 218], [150, 188, 216], [133, 177, 212], [123, 170, 207], [121, 167, 208], [242, 238, 217], [236, 233, 214], [234, 230, 216], [227, 226, 215], [212, 209, 213], [158, 140, 159], [175, 169, 203], [194, 188, 216], [225, 203, 210], [153, 174, 205], [170, 196, 215], [157, 187, 214], [150, 183, 213], [144, 178, 211], [190, 196, 210], [197, 202, 210], [199, 200, 196], [186, 183, 181], [190, 181, 207], [250, 234, 213], [222, 201, 202], [138, 134, 177], [108, 111, 173], [183, 176, 189], [161, 179, 207], [133, 170, 216], [114, 153, 203], [199, 207, 224], [91, 86, 89], [85, 95, 153], [84, 106, 175], [117, 123, 180], [98, 112, 175], [150, 147, 194], [126, 132, 184], [94, 100, 165], [98, 104, 168], [93, 96, 168], [94, 110, 174], [159, 174, 202], [129, 141, 193], [138, 164, 218], [66, 82, 140], [16, 23, 53], [37, 49, 110], [40, 54, 123], [86, 91, 139], [164, 175, 222], [89, 110, 165], [80, 96, 160], [52, 73, 135], [119, 134, 196], [113, 124, 189], [134, 170, 217], [41, 59, 88], [48, 79, 141], [32, 48, 115], [48, 68, 132], [34, 42, 107], [42, 68, 136], [42, 52, 113], [42, 66, 134], [74, 95, 162], [52, 77, 133], [42, 49, 96], [25, 33, 62], [62, 75, 121], [11, 18, 43], [25, 29, 70], [31, 35, 88], [7, 12, 24], [8, 15, 30], [8, 10, 17], [6, 13, 23], [11, 18, 35], [19, 27, 56], [17, 26, 42], [29, 34, 50], [6, 11, 16], [8, 13, 23], [16, 17, 39], [19, 18, 45], [12, 14, 31], [15, 15, 39]], 14);

    const values = [valueNode, ...valueBrowsers];

    values.forEach(value => assert(value).eql([
      [143, 181, 212],
      [158, 186, 216],
      [132, 139, 185],
      [131, 169, 210],
      [210, 217, 221],
      [234, 224, 212],
      [189, 187, 200],
      [189, 210, 227],
      [36, 54, 108],
      [59, 76, 127],
      [8, 13, 25],
      [19, 25, 49],
      [95, 105, 168],
      [95, 146, 188]
    ]));
  });

});
